.TH SDL_ConvertAudio 3 "2018.10.07" "https://github.com/haxpor/sdl2-manpage" "SDL2"
.SH NAME
\fBSDL_ConvertAudio\fR -- Function

.SH SYNOPSIS
Use this function to convert audio data to a desired audio format.

.SH SYNTAX
.TS
tab(:) allbox;
a.
T{
.nf
void SDL_ConvertAudio(SDL_AudioCVT* cvt)
.fi
T}
.TE

.SH FUNCTION PARAMETERS
.TS
tab(:) allbox;
ab l.
cvt:an \fBSDL_AudioCVT\fR structure that was previously setup; see \fRRemarks\fR for details
.TE

.SH RETURN VALUE

Returns 0 if the conversion was completed successfully or a negative error code on failure; call \fBSDL_GetError()\fR for more information.

.SH CODE EXAMPLES

.TS
allbox;
a.
T{
.nf
// Change 1024 stereo sample frames at 48000Hz from Float32 to Int16.
SDL_AudioCVT cvt;
SDL_BuildAudioCVT(&cvt, AUDIO_F32, 2, 48000, AUDIO_S16, 2, 48000);
SDL_assert(cvt.needed); // obviously, this one is always needed
cvt.len = 1024 * 2 * 4; // 1024 stereo float32 sampe frames
cvt.buf = (Uint8*)SDL_malloc(cvt.len * cvt.len_mult);
// read your float32 data into cvt.buf here.
SDL_ConvertAudio(&cvt);
// cvt.buf has cvt.len_cvt bytes of converted data now.
.fi
T}
.TE

.SH REMARKS
This function does the actual audio dat conversion, afer the application has called \fBSDL_BuildAudioCVT()\fR to prepare the conversion information and then filled in the buffer details.

Once the application has initialized the \fBcvt\fR structure using \fBSDL_BuildAudioCVT()\fR, allocated an audio buffer and filled it with audio data inthe source format, this function will convert the buffer, in-place to the desired format.

The data conversion may go through several passes; any given pass may possibly temporarily increase the size oaf the data. For example, SDL might expand 16-bit data to 32 bits before resampling to a lower frequency, buffer will be both the source and destination, converting as necessary in-place, the application must allocate a buffer tha will fuly contain the data during its largest conversion pass. After \fBSDL_BuildAudioCVT()\fR returns, the application should set the \fBcvt\fR structure's \fBlen\fR field to the size, in bytes, of the source data, and allocate a buffer that is \fBlen\fR * \fBlen_mult\fR bytes long for the \fBbuf\fR field.

The source data should be copied into this buffer before the call to \fBSDL_ConvertAudio()\fR. Upon successful return, this buffer will contain the converted audio, and the \fBcvt\fB structure's \fBlen_cvt\fR field will be the size of the converted data, in byteds. Any bytes in the buffer past \fBlen_cvt\fR are undefined once this function returns.

.SH RELATED FUNCTIONS
\fISDL_BuildAudioCVT
