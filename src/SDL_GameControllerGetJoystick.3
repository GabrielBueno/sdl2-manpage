.TH SDL_GameControllerGetJoystick 3 "2018.10.07" "https://github.com/haxpor/sdl2-manpage" "SDL2"
.SH NAME
\fBSDL_GameControllerGetJoystick\fR -- Function

.SH SYNOPSIS
Use this function to get the Joystick ID from a Game Controller. The game controller builds on the Joystick API, but to be able to use the Joystick's functions with a gamepad, you need to use this first to get the joystick object.

.SH SYNTAX
.TS
tab(:) allbox;
a.
T{
.nf
SDL_Joystick SDL_GameControllerGetJoystick(SDL_GameController* gamecontroller)
.fi
T}
.TE

.SH FUNCTION PARAMETERS
.TS
tab(:) allbox;
ab l.
gamecontroller:T{
the game controller object that you want to get a joystick from
T}
.TE

.SH RETURN VALUE
Returns a \fBSDL_Joystick\fR object; call \fBSDL_GetError()\fR for more information.

.SH CODE EXAMPLES
.TS
tab(:) allbox;
a.
T{
.nf
#include <stdio.h>

/* ... */

SDL_GameController* ctrl;
SDL_Joystick* joy;
int i;

for (i=0; i<SDL_NumJoysticks(); ++i)
{
  if (SDL_IsGameController(i))
  {
    printf("Index \'%i\' is a compatible controller, named \'%s\'\n", i, SDL_GameControllerNameForIndex(i));
    ctrl = SDL_GameControllerOpen(i);
    joy = SDL_GameControllerGetJoystick(ctrl);
  }
  else
  {
    printf("Index \'%i\' is not a compatible controller\n", i);
  }
}
.fi
T}
.TE

.SH REMARKS
This function will give you a \fBSDL_Joystick\fR object, which allows you to use \fBSDL_Joystick\fR functions with a \fBSDL_GameController\fR object. This would be useful for getting a joystick's position at any given time, even if it hasn't moved (moving it would produce an event, which would have the axis' value).

The pointer returned is owned by the \fBSDL_GameController\fR. You should not call \fBSDL_JoystickClose()\fR on it, for example, since doing so will likely cause SDL to crash.
