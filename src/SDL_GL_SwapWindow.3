.TH SDL_GL_SwapWindow 3 "2018.10.07" "https://github.com/haxpor/sdl2-manpage" "SDL2"
.SH NAME
\fBSDL_GL_SwapWindow\fR -- Function

.SH SYNOPSIS
Use this function to update a window with OpenGL rendering.

.SH SYNTAX
.TS
tab(:) allbox;
a.
T{
.nf
void SDL_GL_SwapWindow(SDL_Window* window)
.fi
T}
.TE

.SH FUNCTION PARAMETERS
.TS
tab(:) allbox;
ab l.
window:T{
the window to change
T}
.TE

.SH CODE EXAMPLES
.TS
tab(:) allbox;
a.
T{
.nf
SDL_Window* window = SDL_CreateWindow("SDL2/OpenGL Demo", 30, 30, 640, 480, SDL_WINDOW_OPENGL | SDL_WINDOW_RESIZABLE);

/* Create an OpenGL context associated with the window. */
SDL_GLContext glcontext = SDL_GL_CreateContext(window);

/* This makes our buffer swap syncronized with the monitor's vertical refresh */
SDL_GL_SetSwapInterval(1);

/* Clear context */
glClearColor(0,0,0,1);
glClear(GL_COLOR_BUFFER_BIT);

/* <Extra drawing function here> */

/* Swap our buffer to display the current contents of buffer on screen */
SDL_GL_SwapWindow(window);
.fi
T}
.TE

.SH REMARKS
This is used with double-buffered OpenGL contexts which are the default.

On macOS, make sure you bind 0 to the draw framebuffer before swapping the window, otherwise nothing will happen. See \fIthis blog post\fR (\fIhttp://renderingpipeline.com/2012/05/nsopenglcontext-flushbuffer-might-not-do-what-you-think/\fR) for more info.
