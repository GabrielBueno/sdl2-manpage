.TH SDL_CondWait 3 "2018.10.07" "https://github.com/haxpor/sdl2-manpage" "SDL2"
.SH NAME
\fBSDL_CondWait\fR -- Function

.SH SYNOPSIS
Use this function to wait until a condition variable is signaled.

.SH SYNTAX
.TS
tab(:) allbox;
a.
T{
.nf
void SDL_CondWait(SDL_cond* cond,
                  SDL_mutex* mutex)
.fi
T}
.TE

.SH FUNCTION PARAMETERS
.TS
tab(:) allbox;
ab l.
cond:the condition variable to wait on
mutex:the mutex used to coordinate thread access
.TE

.SH RETURN VALUE
Returns 0 when it is signaled or a negative error code on failure; call \fBSDL_GetError()\fR for more information.

.SH CODE EXAMPLES
Typical use of condition variables:

.TS
allbox;
a.
T{
.nf
SDL_bool condition = SDL_False;
SDL_mutex* lock;
SDL_cond* cond;

lock = SDL_CreateMutex();
cond = SDL_CreateCond();
.
.
Thread A:
  SDL_LockMutex(lock);
  while (!condition)
  {
    SDL_CondWait(cond, lock);
  }
  SDL_UnlockMutex(lock);

Thread B:
  SDL_LockMutex(lock);
  ...
  condition = SDL_TRUE;
  ...
  SDL_CondSignal(cond);
  SDL_UnlockMutex(lock);
.
.
SDL_DestroyCond(cond);
SDL_DestroyMutex(lock);
.fi
T}
.TE

.SH REMARKS
This function unlocks the specified \fBmutex\fR and waits for another thread to call \fBSDL_CondSignal()\fR or \fBSDL_CondBroadcast()\fR on the condition variable \fBcond\fR. Once the condition variable is signaled, the mutex is re-locked and the function returns.

The mutex must be locked before calling this function.

This function is the equivalent of calling \fBSDL_CondWaitTimeout()\fR with a time length of \fBSDL_MUTEX_MAXWAIT\fR.

.SH RELATED FUNCTIONS
\fISDL_CondBroadcast
.br
\fISDL_CondSignal
.br
\fISDL_CondWaitTimeout
.br
\fISDL_CreateCond
.br
\fISDL_DestroyCond
