.TH SDL_RWwrite 3 "2018.10.07" "https://github.com/haxpor/sdl2-manpage" "SDL2"
.SH NAME
\fBSDL_RWwrite\fR -- Function

.SH SYNOPSIS
Use this function to write to an \fBSDL_RWops\fR data stream.

.SH SYNTAX
.TS
tab(:) allbox;
a.
T{
.nf
size_t SDL_RWwrite(strut SDL_RWops*   context,
                   const void*        ptr,
                   size_t             size,
                   size_t             num)
.fi
T}
.TE

.SH FUNCTION PARAMETERS
.TS
tab(:) allbox;
ab l.
context:T{
a pointer to an \fBSDL_RWops\fR structure
T}
ptr:T{
a pointer to a buffer containing data to write
T}
size:T{
the size of an object to write, in bytes
T}
num:T{
the number of objects to write
T}
.TE

.SH RETURN VALUE
Returns the number of objects written, which will be less than \fBnum\fR on error; call \fBSDL_GetError()\fR for more information.

.SH CODE EXAMPLES
.TS
tab(:) allbox;
a.
T{
.nf
SDL_RWops *rw = SDL_RWFromFile("hello.txt", "w");
if (rw != NULL)
{
  const char *str = "Hello World";
  size_t len = SDL_strlen(str);

  if (SDL_RWwrite(rw, str, 1, len) != len)
  {
    printf("Couldn't fully write string\\n");
  }
  else
  {
    printf("Wrote %d 1-byte blocks\\n", len);
  }
  SDL_RWclose(rw);
}
.fi
T}
.TE

.SH REMARKS
This function writes exactly \fBnum\fR objects each of size \fBsize\fR from the area pointed at by \fBptr\fR to the stream. If this fails for any reason, it'll return less than \fBnum\fR to demonstrate how far the write progressed. On success, it returns \fBnum\fR.

\fBSDL_RWwrite\fR is actually a macro that calls the \fBSDL_RWops\fR's \fBwrite\fR method appropriately, to simplify application development.

.SH RELATED FUNCTIONS
\fISDL_RWclose\fR
.br
\fISDL_RWFromConstMem\fR
.br
\fISDL_RWFromFile\fR
.br
\fISDL_RWFromFP\fR
.br
\fISDL_RWFromMem\fR
.br
\fISDL_RWread\fR
.br
\fISDL_RWseek\fR
