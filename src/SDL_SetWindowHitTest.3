.TH SDL_SetWindowHitTest 3 "2018.10.07" "https://github.com/haxpor/sdl2-manpage" "SDL2"
.SH NAME
\fBSDL_SetWindowHitTest\fR -- Function

.SH SYNOPSIS
Use this function to provide a callback that decides if a window region has special properties.

.SH SYNTAX
.TS
tab(:) allbox;
a.
T{
.nf
int SDL_SetWindowHitTest(SDL_Window*    window,
                         SDL_HitTest    callback,
                         void*          callback_data)
.fi
T}
.TE

.SH FUNCTION PARAMETERS
.TS
tab(:) allbox;
ab l.
window:T{
the window to set hit-testing on
T}
callback:T{
the function to call when doing a hit-test
T}
callback_data:T{
an app-defined void pointer passed to \fBcallback\fR
T}
.TE

.SH RETURN VALUE
Returns 0 on success or -1 on error (including unsupported); call \fBSDL_GetError()\fR for more information.

.SH REMARKS
The function prototype for \fBcallback\fR is:

.TS
tab(:) allbox;
a.
T{
.nf
SDL_HitTestResult SDL_HitTest(SDL_Window*         win,
                              const SDL_Point*    area,
                              void*               data)
.fi
T}
.TE

where \fBSDL_HitTest\fR is your function name and its parameters are:

.TS
tab(:) allbox;
ab l.
win:T{
the \fBSDL_Window\fR where hit-testing was set on
T}
area:T{
an \fBSDL_Point\fR which should be hit-tested
T}
data:T{
what wass passed as \fBcallback_data\fR to \fBSDL_SetWindowHitTest()\fR
T}
.TE

\fBcallback\fR should return an \fBSDL_HitTestResult\fR.

Normally windows are dragged and resized by decorations provided by the system window manager (a title bar, borders, etc), but for some apps, it makes sense to drag them from somewhere else inside the window itself; for example, one might have a borderless window that wants to be draggable from any part, or simulate its own title bar, etc.

This function lets the app provide a callback that designates pieces of a given window as special. This callback is run during event processing if we need to tell the OS to treat a region of the window specially; the use of this callback is known as "hit testing".

Mouse input may not be delivered to your application if it is within a special area; the OS will often apply that input to moving the window or resizing the window and not deliver it to the application.

Specifying NULL for a callback disables hit-testing. Hit-testing is disabled by default.

Platforms that don't support this functionality will return -1 unconditionally, even if you're attempting to disable hit-testing.

Your callback may fire at any time, and its firing does not indicate any specific behavior (for example, on Windows, this certainly might fire when the OS is deciding whether to drag your window, but it fires for lots of other reasons, too, some unrelated to anything you probably care about and when the mouse isn't actually at the location it is testing). Since this can fire at any time, you should try to keep your callback efficient, devoid of allocations, etc.

.sh VERSION
This function is available since SDL 2.0.4.
