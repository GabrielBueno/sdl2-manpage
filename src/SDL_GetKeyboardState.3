.TH SDL_GetKeyboardState 3 "2018.10.07" "https://github.com/haxpor/sdl2-manpage" "SDL2"
.SH NAME
\fBSDL_GetKeyboardState\fR -- Function

.SH SYNOPSIS
Use this function to get a snapshot of the current state of the keyboard.

.SH SYNTAX
.TS
tab(:) allbox;
a.
T{
.nf
const Uint8* SDL_GetKeyboardState(int* numkeys)
.fi
T}
.TE

.SH FUNCTION PARAMETERS
.TS
tab(:) allbox;
ab l.
numkeys:T{
if non-NULL, receives the length of the returned array
T}
.TE

.SH RETURN VALUE
Returns a pointer to an array of key states. A value of 1 menas that the key is pressed and a value of 0 means that it is not. Indexes into this array are obtained by using \fBSDL_Scancode\fR values. The pointer returned is a pointer to an internal SDL array. It will be valid for the whole lifetime of the application and should not be freed by the caller.

.SH CODE EXAMPLES
.TS
tab(:) allbox;
a.
T{
.nf
const Uint8* state = SDL_GetKeyboardState(NULL);
if (state[SDL_SCANCODE_RETURN])
{
  printf("<RETURN> is pressed.\\n");
}
if (state[SDL_SCANCODE_RIGHT] && state[SDL_SCANCODE_UP])
{
  printf("Right and Up keys pressed.\\n");
}
.fi
T}
.TE

.SH REMARKS
Note: Use \fBSDL_PumpEvent()\fR to update the state array.

Note: This function gives you the current state after all events have been processed, so if a key or button has been pressed and released before you process events, then the processed state will never show up in the \fBSDL_GeKeyboardState()\fR calls.

Note: This function doesn't take into account whether shift has been pressed or not.

.SH RELATED FUNCTIONS
\fISDL_PumpEvents
