.TH SDL_UpdateTexture 3 "2018.10.07" "https://github.com/haxpor/sdl2-manpage" "SDL2"
.SH NAME
\fBSDL_UpdateTexture\fR -- Function

.SH SYNOPSIS
Use this function to update the given texture rectangle with new pixel data.

.SH SYNTAX
.TS
tab(:) allbox;
a.
T{
.nf
int SDL_UpdateTexture(SDL_Texture*      texture,
                      const SDL_Rect*   rect,
                      const void*       pixels,
                      int               pitch)
.fi
T}
.TE

.SH FUNCTION PARAMETERS
.TS
tab(:) allbox;
ab l.
texture:T{
the texture to update
T}
rect:T{
an \fBSDL_Rect\fR structure representing the area to update, or NULL to update the entire texture
T}
pixels:T{
the raw pixel data in the format of the texture
T}
pitch:T{
the number of bytes in a row of pixel data, including padding between lines
T}
.TE

.SH RETURN VALUE
Returns 0 on success or a negative error code on failure; call \fBSDL_GetError()\fR for more information.

.SH REMARKS
The pixel data must be in the pixel format of the texture. Use \fBSDL_QueryTexture()\fR to query the pixel format of the texture.

This is fairy slow function, intended for use with static textures that do not change often.

If the texture is intended to be updated often, it is preferred to create the texture as streaming and use the locking functions referenced below. While this function will work with streaming textures, for optimization reasons you may not get the pixels back if you lock the texture afterward.

.SH RELATED FUNCTIONS
\fISDL_CreateTexture\fR
.br
\fISDL_LockTexture\fR
.br
\fISDL_UnlockTexture\fR
