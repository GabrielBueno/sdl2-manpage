.TH SDL_CondWaitTimeout 3 "2018.10.07" "https://github.com/haxpor/sdl2-manpage" "SDL2"
.SH NAME
\fBSDL_CondWaitTimeout\fR -- Function

.SH SYNOPSIS
Use this function to wait untio a condition variable is signaled or a specified amount of time has passed.

.SH SYNTAX
.TS
tab(:) allbox;
a.
T{
.nf
void SDL_CondWaitTimeout(SDL_cond* cond,
                         SDL_mutex* mutex,
                         Uint32 ms)
.fi
T}
.TE

.SH FUNCTION PARAMETERS
.TS
tab(:) allbox;
ab l.
cond:the condition variable to wait on
mutex:the mutex used to coordinate thread access
ms:the maximum time to wait in millseconds, or \fBSDL_MUTEX_WAITWAIT\fR to wait indefinitely
.TE

.SH RETURN VALUE
Returns 0 if the condition variable is signaled, \fBSDL_MUTEX_TIMEDOUT\fR if the condition is not signaled in the alloted time, or a negative error code on failure; call \fBSDL_GetError()\fR for more information.

.SH CODE EXAMPLES
.TS
allbox;
a.
T{
.nf
SDL_bool condition = SDL_FALSE;
SDL_mutex* lock;
SDL_cond* cond;

lock = SDL_CreateMutex();
cond = SDL_CreateCond();
.
.
Thread A:
  const Uint32 timeout = 1000;  /* wake up every second */
  while (!done)
  {
    SDL_LockMutex(lock);
    while (!condition && SDL_CondWaitTimeout(cond, lock, timeout) != SDL_MUTEX_TIMEDOUT)
    {
      continue;
    }

    if (condition)
    {
      ...
    }

    ... do some periodic work
  }

Thread B:
  SDL_LockMutex(lock);
  ...
  condition = SDL_TRUE;
  ...
  SDL_CondSignal(cond);
  SDL_UnlockMutex(lock);
.
.
SDL_DestroyCond(cond);
SDL_DestroyMutex(lock);
.fi
T}
.TE

.SH REMARKS
This function unlocks the specified \fBmutex\fR and waits for another thread to call \fBSDL_CondSignal()\fR or \fBSDL_CondBroadcast()\fR on the condition variable \fBcond\fR, or for the specified time to elapse. Once the condition variable is signaled or the time elapsed, the mutex is re-locked and the function returns.

The mutex must be locked before calling this function.

.SH RELATED FUNCTIONS
\fISDL_CondBroadcast
.br
\fISDL_CondSignal
.br
\fISDL_CondWait
.br
\fISDL_CreateCond
.br
\fISDL_DestroyCond
