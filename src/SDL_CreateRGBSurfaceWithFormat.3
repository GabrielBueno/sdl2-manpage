.TH SDL_CreateRGBSurfaceWithFormat 3 "2018.10.07" "https://github.com/haxpor/sdl2-manpage" "SDL2"
.SH NAME
\fBSDL_CreateRGBSurfaceWithFormat\fR -- Function

.SH SYNOPSIS
Use this function to allocate an RGB surface.

.SH SYNTAX
.TS
tab(:) allbox;
a.
T{
.nf
SDL_Surface* SDL_CreateRGBSurfaceWithFormat(Uint32    flags,
                                            int       width,
                                            int       height,
                                            int       depth,
                                            Uint32    format)
.fi
T}
.TE

.SH FUNCTION PARAMETERS
.TS
tab(:) allbox;
ab l.
flags:the \fBflags\fR are obsolete and should be set to 0
width:the width in pixels of the surface to create
height:the height in pixels of the surface to create
depth:the depth in bits of the surface to create
format:the pixel format (see SDL_PixelFormatEnum) of the surface to create
.TE

.SH RETURN VALUE
Returns a new \fBSDL_Surface\fR on success or NULL on failure; call \fBSDL_GetError()\fR for more information.

.SH CODE EXAMPLES
.TS
tab(:) allbox;
a.
T{
.nf
/* Create a 32-bit surface with the bytes of each pixel in R,G,B,A order, as expected by OpenGL for textures */
SDL_Surface* surf;
surf = SDL_CreateRGBSurfaceWithFormat(0, width, height, 32, SDL_PIXELFORMAT_RGBA32);
if (surf == NULL) {
  SDL_Log("SDL_CreateRGBSurfaceWithFormat() failed: %s", SDL_GetError());
  exit(1);
}
.fi
T}
.TE

.SH REMARKS
If the function runs out of memory, it will return NULL.

.SH VERSION
This function is available since SDL2.0.5.

.SH RELATED FUNCTIONS
\fISDL_CreateRGBSurface
.br
\fISDL_CreateRGBSurfaceWithFormatFrom
.br
\fISDL_FreeSurface
.br
