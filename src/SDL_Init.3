.TH SDL_Init 3 "2018.08.14" "https://github.com/haxpor/sdl2-manpage" "SDL2"
.SH NAME
SDL_Init - API

.SH SYNOPSIS
.sb
\fBint SDL_Init\fR(\fBUint32 \fRflags)

.SH DESCRIPTION
Use this function to initialize the SDL library. This must be called before using most other SDL functions.

.SH REMARKS
\fBSDL_Init\fR() simply forwards to calling \fBSDL_InitSubSystem\fR(). Therefore, the two may be used interchangeably. Though for readability of your code \fBSDL_InitSubSystem\fR() might be preferred.
.PP
The file I/O and threading subsystem are intitialized by default. You must specifically initialize other subsystems if you use them in your application.
.PP
Logging works without initialization too.

.PP
\fBflags\fR may be any of the following OR'd together.
.PP
.RS 4
\fBSDL_INIT_TIMER
\fRtimer subsystem
.br
\fBSDL_INIT_AUDIO
\fRaudio subsystem
.br
\fBSDL_INIT_AUDIO
\fRaudio subsystem
.br
\fBSDL_INIT_VIDEO
\fRvideo subsystem; automatically initializes the events subsystem
.br
\fBSDL_INIT_JOYSTICK
\fRjoystick subsystem; automatically initializes the events subsystem
.br
\fBSDL_INIT_HAPTIC
\fRhaptic (force feedback) subsystem
.br
\fBSDL_INIT_GAMECONTROLLER
\fRcontroller subsystem; automatically intitializes the joystick subsystem
.br
\fBSDL_INIT_EVENTS
\fRevents subsytem
.br
\fBSDL_INIT_EVERYTHING
\fRall of the above subsystems
.br
\fBSDL_INIT_NOPARACHUTE
\fRcompatibility; this flag is ignored
.RE

.PP
If you want to initialize subsystems separately you would call \fBSDL_Init\fR(0) followed by \fBSDL_InitSubSystem\fR() with the desired subsystem flag.

.SH "SEE ALSO"
SDL_InitSubSystem, SDL_Quit, SDL_SetMainReady, SDL_WasInit
